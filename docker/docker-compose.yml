version: "3"

services:
  redis:
    container_name: mv-redis
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
    # network_mode: host

  mongo:
    container_name: mv-db
    image: mongo
    ports:
      - "${MONGODB_PORT}:${DOCKER_MONGODB_PORT}"
    volumes:
      - ./db/scripts:/docker-entrypoint-initdb.d/:ro
      - ./db/vols:/data/db
    command: "--logpath=/dev/null"
    environment:
      - MONGO_INITDB_DATABASE=$MONGODB_NAME
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    # network_mode: host

  api:
    container_name: mv-api
    build:
      context: ../mv-api
      dockerfile: ../docker/Dockerfile.api
    depends_on:
      - mongo
      - redis
    env_file:
      - ".env.api"
    environment:
      - DB_USERNAME=$MONGODB_USERNAME
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_AUTH=$MONGODB_AUTHDB
    network_mode: host

  cron:
    container_name: mv-cron
    build:
      context: ../mv-cron
      dockerfile: ../docker/Dockerfile.cron
    depends_on:
      - mongo
      - redis
    env_file:
      - ".env.cron"
    network_mode: host
    cap_add:
      - SYS_ADMIN

  front:
    image: node:fermium-alpine3.10
    container_name: mv-front
    volumes:
      - "../mv-front:/app"
    working_dir: /app
    env_file:
      - ".env.front"
    command: /bin/sh -c "npm install && npm start"
    depends_on:
      - api
    network_mode: host

  admin:
    image: node:fermium-alpine3.10
    container_name: mv-admin
    volumes:
      - "../mv-admin:/app"
    working_dir: /app
    command: /bin/sh -c "npm install && PORT=3001 npm start"
    depends_on:
      - api
    network_mode: host
